/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/': {
    get: {
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  '/book': {
    get: {
      parameters: {
        query: {
          id?: parameters['rowFilter.book.id'];
          createdAt?: parameters['rowFilter.book.createdAt'];
          title?: parameters['rowFilter.book.title'];
          author?: parameters['rowFilter.book.author'];
          publisher?: parameters['rowFilter.book.publisher'];
          isbn?: parameters['rowFilter.book.isbn'];
          inStock?: parameters['rowFilter.book.inStock'];
          image?: parameters['rowFilter.book.image'];
          /** Filtering Columns */
          select?: parameters['select'];
          /** Ordering */
          order?: parameters['order'];
          /** Limiting and Pagination */
          offset?: parameters['offset'];
          /** Limiting and Pagination */
          limit?: parameters['limit'];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters['range'];
          /** Limiting and Pagination */
          'Range-Unit'?: parameters['rangeUnit'];
          /** Preference */
          Prefer?: parameters['preferCount'];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions['book'][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** book */
          book?: definitions['book'];
        };
        query: {
          /** Filtering Columns */
          select?: parameters['select'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters['rowFilter.book.id'];
          createdAt?: parameters['rowFilter.book.createdAt'];
          title?: parameters['rowFilter.book.title'];
          author?: parameters['rowFilter.book.author'];
          publisher?: parameters['rowFilter.book.publisher'];
          isbn?: parameters['rowFilter.book.isbn'];
          inStock?: parameters['rowFilter.book.inStock'];
          image?: parameters['rowFilter.book.image'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters['rowFilter.book.id'];
          createdAt?: parameters['rowFilter.book.createdAt'];
          title?: parameters['rowFilter.book.title'];
          author?: parameters['rowFilter.book.author'];
          publisher?: parameters['rowFilter.book.publisher'];
          isbn?: parameters['rowFilter.book.isbn'];
          inStock?: parameters['rowFilter.book.inStock'];
          image?: parameters['rowFilter.book.image'];
        };
        body: {
          /** book */
          book?: definitions['book'];
        };
        header: {
          /** Preference */
          Prefer?: parameters['preferReturn'];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
}

export interface definitions {
  book: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Format: timestamp with time zone
     * @default now()
     */
    createdAt?: string;
    /** Format: text */
    title: string;
    /** Format: text */
    author?: string;
    /** Format: text */
    publisher?: string;
    /** Format: text */
    isbn: string;
    /**
     * Format: boolean
     * @default false
     */
    inStock: boolean;
    /** Format: text */
    image?: string;
  };
}

export interface parameters {
  /**
   * @description Preference
   * @enum {string}
   */
  preferParams: 'params=single-object';
  /**
   * @description Preference
   * @enum {string}
   */
  preferReturn: 'return=representation' | 'return=minimal' | 'return=none';
  /**
   * @description Preference
   * @enum {string}
   */
  preferCount: 'count=none';
  /** @description Filtering Columns */
  select: string;
  /** @description On Conflict */
  on_conflict: string;
  /** @description Ordering */
  order: string;
  /** @description Limiting and Pagination */
  range: string;
  /**
   * @description Limiting and Pagination
   * @default items
   */
  rangeUnit: string;
  /** @description Limiting and Pagination */
  offset: string;
  /** @description Limiting and Pagination */
  limit: string;
  /** @description book */
  'body.book': definitions['book'];
  /** Format: bigint */
  'rowFilter.book.id': string;
  /** Format: timestamp with time zone */
  'rowFilter.book.createdAt': string;
  /** Format: text */
  'rowFilter.book.title': string;
  /** Format: text */
  'rowFilter.book.author': string;
  /** Format: text */
  'rowFilter.book.publisher': string;
  /** Format: text */
  'rowFilter.book.isbn': string;
  /** Format: boolean */
  'rowFilter.book.inStock': string;
  /** Format: text */
  'rowFilter.book.image': string;
}
